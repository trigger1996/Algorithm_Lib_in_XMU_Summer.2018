clear;
clc;
clear all;

f = @(x) x .* sin(10 * pi * x) + 2.;% f(x) = sin(10 * pi * x) + 2, x取值范围[-1, 2]
%f = @(x) sin(x) + x .* cos(x);		% 函数表达式
fplot(f, [-1, 2]);					% 画出函数图像

N = 50;								% 种群上限
L = 10;								% 基因长度
iter = 100;							% 迭代次数
dna = randi([0, 1], [N, L]);		% 基因，rand()参数1是每个数的取值范围，参数2是矩阵的行列值

% 交换尝试

% 交换应该是有2种的，单断点和点多断点
% 如果是单断点，可以用断点以前的，进行交换
% 为了好举例，用10进制的，比如12345和97543，断点位置为3(以后matlab都是从1开始)
% 那么则变为，97545和12343

% 单断点
for i = 1: N								% 交叉操作，为了方便，这边还是用循环，否则不好表示个体
	if rand < 1								% 本来交换是有个概率的，这边为了做实验，直接100%交换
		d = randi(N);						% 确定另一个交叉的个体
		m = dna(d,:);						% 确定另一个交叉的个体
		d = randi(L-1);						% 确定交叉断点
		x1(i,:) = [dna(i,1:d), m(d+1:L)];	% 新个体 1，这里注意一下，永远是原始种群第i个个体和第随机个个体换        
		x2(i,:) = [m(1:d), dna(i,d+1:L)];	% 新个体 2
	end
end


% 多断点
% 多断点的起始位置就不是1了，而是随机的
% 如12345和98764，断点设为2和4，那么交换以后就是19875和92344
for i = 1 : N
	
	d  = randi(N);							% 获取1个用于交换的个体
	m  = dna(d, :);
	
	d1 = randi(L);
	d2 = randi(L);							% 随机得到两个断点
	if d1 > d2
		t = d1;								% 交换变量，这里务必保证断点d1在d2之前
		d1 = d2;
		d2 = t;
		clear t; 
	end
	
	x11(i, :) = [ dna(i, 1 : d1-1), m(d1 : d2),       dna(i, d2+1 : L) ];
	x12(i, :) = [ m(1 : d1-1),      dna(i, d1 : d2),  m(d2+1 : L) ];	
end